<launch>

<!--
<remap to="rgb/image_raw" from="color_camera/image_raw" />
<remap to="depth/image_raw" from="point_cloud" />
-->

<node pkg="tango_streamer" type="image_server.py" name="image_server_color">
   <param name="port_number" value="11111" type="int"/>
   <param name="camera_name" value="color_camera"/>
</node>
<node pkg="tango_streamer" type="image_server.py" name="image_server_fisheye">
   <param name="port_number" value="11115" type="int"/>
   <param name="camera_name" value="fisheye_camera"/>
</node>

<node pkg="tango_streamer" type="pose_server.py" name="pose_server">
   <param name="port_number" value="11113" type="int"/>
   <param name="pose_topic" value="tango_pose"/>
   <param name="coordinate_frame" value="odom"/>
</node>

<node pkg="tango_streamer" type="pose_area_server.py" name="pose_server_area"  output="screen">
   <param name="port_number" value="11117" type="int"/>
   <param name="pose_topic" value="tango_area_pose"/>
   <param name="coordinate_frame" value="area_learning"/>
</node>

<node pkg="tango_streamer" type="intrinsics_server.py" name="intrinsics_server_color">
   <param name="port_number" value="11114" type="int"/>
   <param name="camera_name" value="color_camera"/>
</node>

<node pkg="tango_streamer" type="intrinsics_server.py" name="intrinsics_server_fisheye">
   <param name="port_number" value="11116" type="int"/>
   <param name="camera_name" value="fisheye_camera"/>
</node>

<node pkg="tango_streamer" type="pointcloud_server.py" name="pointcloud_server"/>

<!--
<node pkg="tf" type="static_transform_publisher" name="device_to_depth_cam" args="0 0 0 0 0.24 0 device depth_camera 10"/>
<node pkg="tf" type="static_transform_publisher" name="fisheye_to_depth_cam" args="0 -0.05 0 0 0 0 depth_camera fisheye_camera 10"/>
-->

<node pkg="image_transport" type="republish" name="decompress_fisheye" args="in:=fisheye_camera/image_raw compressed out:=fisheye_camera/image_raw raw"/>

<node pkg="image_transport" type="republish" name="decompress_color" args="in:=color_camera/image_raw compressed out:=color_camera/image_raw raw"/>

<node pkg="tango_streamer" type="camera_node" name="fisheye_synchronizer">
	<param name="camera_name" value="fisheye_camera"/>
</node>

<node pkg="tango_streamer" type="camera_node" name="color_synchronizer">
	<param name="camera_name" value="color_camera"/>
</node>

<node pkg="image_proc" type="image_proc" name="image_proc" ns="color_camera" />

<node pkg="head_unit" type="converter" name="converter">
  <remap from="points_in" to="point_cloud" />
  <remap from="points_out" to="point_cloud2" />
</node>

<!--
  <group ns="stereo" if="$(arg stereo)">
    <node name="left" pkg="usb_cam" type="usb_cam_node" output="screen" >
      <param name="video_device" value="/dev/video2" />
      <param name="image_width" value="640" />
      <param name="image_height" value="480" />
      <param name="pixel_format" value="mjpeg" />
      <param name="camera_frame_id" value="left" />
      <param name="io_method" value="mmap"/>
      <param name="camera_info_url" type="string" value="file://$(find head_unit)/calibration/left.yaml" />
    </node>
    <node name="right" pkg="usb_cam" type="usb_cam_node" output="screen" >
      <param name="video_device" value="/dev/video1" />
      <param name="image_width" value="640" />
      <param name="image_height" value="480" />
      <param name="pixel_format" value="mjpeg" />
      <param name="camera_frame_id" value="right" />
      <param name="io_method" value="mmap"/>
      <param name="camera_info_url" type="string" value="file://$(find head_unit)/calibration/right.yaml" />
    </node>
    <node name="stereo_image_proc" pkg="stereo_image_proc" type="stereo_image_proc" output="screen">
      <param name="approximate_sync" type="bool" value="true" />
    </node>
  </group>
-->

<!--
<node pkg="head_unit" type="imu_to_tf" name="imu_to_tf" />
-->

<!--
<include file="$(find rgbd_launch)/launch/includes/processing.launch.xml">
  <arg name="manager" value="rgbdman" />
  <arg name="ir_processing" value="false" />
  <arg name="depth_registered_processing" value="false" />
  <arg name="hw_registered_processing" value="false" />
</include>
-->

</launch>

